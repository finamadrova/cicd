name: publish-contracts
author: gabledata
description: |
  Publishes new or updated contracts to Gable. Publishing a contract is idempotent - if no update has been made to the contract the 
  publish will be a no-op, so it's safe to publish all contracts on every run.
inputs:
  gable-api-endpoint:
    description: 'Gable API Endpoint in the format https://api.<organization>.gabledata.com'
    required: true
  gable-api-key:
    description: 'Gable API Key'
    required: true
  gable-version:
    description: 'Gable CLI Version. See https://pypi.org/project/gable/#history for a list of available versions.'
    required: false
    default: 'latest'
  allow-gable-pre-release:
    description: 'Whether or not to install pre-release versions of Gable'
    required: false
    default: 'false'
  contract-paths:
    description: |
      Space delimited path(s) to the contracts to publish, with support for glob patterns. Example: 
        "service1/**/*.yml contracts/service2/example_contract.yml"
      This input may also be specified as a multiline string, with each line representing a path to contract(s) to publish. Example:
        contract-paths: |
          service1/**/*.yml
          service2/example_contract.yml
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        # TODO: maintain compatibility list for gable versions
        python-version: 3.10.11
    - name: Install Gable
      shell: bash
      run: |
        if [[ "${{ inputs.allow-gable-pre-release }}" == "true" ]]; then
          PRE_RELEASE_TAG="--pre"
        else
          PRE_RELEASE_TAG=""
        fi
        if [[ "${{ inputs.gable-version }}" == "latest" ]]; then
          pip install -q gable $PRE_RELEASE_TAG
        else
          pip install -q gable==${{ inputs.gable-version }} $PRE_RELEASE_TAG
        fi
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        # Don't clean the repository before checking out the code, we don't want to remove any virtual environments or dependencies
        # that may have been installed
        clean: 'false'
    - name: "Publish Contracts"
      shell: "bash"
      run: |
        # Publish contracts using gable cli
        # Replace newlines with spaces if input was passed in as multiline string
        export INPUT_LIST=$(echo "${{ inputs.contract-paths }}" | tr '\n' ' ')
        # Run gable publish with the specified contract paths

        
        GABLE_API_ENDPOINT="${{ inputs.gable-api-endpoint }}" GABLE_API_KEY="${{ inputs.gable-api-key }}" \
          gable contract publish $INPUT_LIST
branding:
  icon: 'check-circle'
  color: 'purple'
